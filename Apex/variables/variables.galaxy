//=========================================================
//      Apex Roleplaying Engine
//      Copyright (c) 2022, Apex Group
//=========================================================
// This software is distributed under the MIT License:
// <http://opensource.org/licenses/MIT>
//=========================================================



include "apex/variables/debug_var_functions.galaxy"
include "apex/variables/general_var_functions.galaxy"

void LibapxVariableFunctionInitialize() {






    LibapxCommandsGuideSetVariableFunctionEntry(
        "Variable Syntax", 
        "Variable Syntax allows you to calculate mathamatical values within apex. It is united with _varset and $variablefunctions to allow many different results. <br> Examples Below: <br> ${1} //Prints 1 <br> ${1+5} //Prints 6 <br> ${2^3} // Prints 8 <br> ${(2 * (5 *(3+6)) / 15 -2)} // prints 4 <br> ${ $RandInt(1,10) // Prints a random integer from 1 to 10 } "
    ); 
    LibapxVariableFunctionCreate("Debug", LibapxVariableFunctionDebug);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Alive()", 
        "Returns number based on if unit is alive or dead <br> Example: <br> ${$Alive()}"
    );
    LibapxVariableFunctionCreate("Alive", LibapxVariableFunctionAlive);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitID()", 
        "Returns the current unit's UnitID <br> Example: <br> ${$UnitID()}"
    );
    LibapxVariableFunctionCreate("UnitID", LibapxVariableFunctionUnitID);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Height()", 
        "Returns the world height where of selected unit's position (based on height type). <br> Example: ${Height(1)} <br> Ground(1), Air(2), Glide(3)"
    ); 
    LibapxVariableFunctionCreate("Height", LibapxVariableFunctionWorldHeight);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitProp()", 
        "Returns selected unit's unit property depending on the number given.  <br> Example:  <br> Returns current life: ${$UnitProp(3)}  <br> MovementSpeed(1) <br> Armor(2) <br> Life(3) <br> LifeRegen(4) <br> MaxLife(5) <br> Shields(6) <br> ShieldsArmor(7) <br> ShieldsRegen(8) <br> MaxShields(9) <br> Energy(10) <br> EnergyRegen(11) <br> MaxEnergy(12) <br> Height(13) <br> Kills(14) <br> KillsXp(15) <br> Level(16) <br> Speed(17) <br> CurrentSpeed(18) <br> Acceleration(19) <br> Turnrate(20) <br> Radius(21) <br> Experience(22) <br> LifePercent(23) <br> EnergyPercent (24) <br> ShieldsPercent (25)"
    ); 
    LibapxVariableFunctionCreate("UnitProp", LibapxVariableFunctionUnitAttribute);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Player()", 
        "Returns the owner's player number based on their slot in the game lobby. <br> Example:${$Player()}"
    ); 
    LibapxVariableFunctionCreate("Player", LibapxVariableFunctionUnitPlayerNumber);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"BehaviorCount()", 
        "Returns the behavior count of the currently selected unit. <br> Example:$[&BehaviorCount(Stimpack)]"
    ); 
    LibapxStringFunctionCreate("BehaviorCount", LibapxVariableFunctionUnitBehaviorCount);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Resource()", 
        "Returns current player's specific resource count <br> Based on given number. <br> Example:${$Resource(0)} <br> Resource <br> (0) Minerals <br> (1) Vespene Gas <br> (2) Terrazine Gas <br> (3) Custom Resource <br> (4) Supplies Used <br> (5) Supplies Made <br> (6) Supply Limit <br> (12) Minerals Gathered <br> (13) Vespene Gathered <br> (14) Terrazine Gathered <br> (15) Custom Gathered "
    ); 
    LibapxVariableFunctionCreate("Resource", LibapxVariableFunctionGetResources);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"MouseX()", 
        "Returns the current mouse X position <br> Example: <br> ${$MouseX()}"
    ); 
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"MouseY()", 
        "Returns the current mouse Y position <br> Example: <br> ${$MouseY()}"
    );
    LibapxVariableFunctionCreate("MouseX", LibapxVariableFunctionMouseX);
    LibapxVariableFunctionCreate("MouseY", LibapxVariableFunctionMouseY);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitFacing()", 
        "Returns the unit's facing direction in degrees <br> Example: <br> ${$UnitFacing()}"
    ); 
    LibapxVariableFunctionCreate("UnitFacing", LibapxVariableFunctionUnitFacing);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitX()", 
        "Returns the current unit X position <br> Example: <br> ${$UnitX()}"
    ); 
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitY()", 
        "Returns the current unit Y position <br> Example: <br> ${$UnitY()}"
    );
    LibapxVariableFunctionCreate("UnitX", LibapxVariableFunctionUnitX);
    LibapxVariableFunctionCreate("UnitY", LibapxVariableFunctionUnitY);
    

    
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"RandReal(min,max)", 
        "Returns a random real number between the two inputs, if no inputs are provided it's between 0 and 1. <br> Example: <br> ${$RandReal(1,5)}"
    );
    LibapxVariableFunctionCreate("RandReal", LibapxVariableFunctionRandomFixed);
    LibapxVariableFunctionCreate("RandFixed", LibapxVariableFunctionRandomFixed);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"RandInt(min,max)", 
        "Returns a random integer number between the two inputs, if no inputs are provided it's between 0 and 100 <br> Example: <br> ${$RandReal(1,5)}"
    );
    LibapxVariableFunctionCreate("RandomInt", LibapxVariableFunctionRandomInt);
    LibapxVariableFunctionCreate("RandInt", LibapxVariableFunctionRandomInt);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Sin(degrees)", 
        "Returns the sin of the input number <br> Example: <br> ${$Sin(1)}"
    );
    LibapxVariableFunctionCreate("Sin", LibapxVariableFunctionSin);
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Cos(degrees)", 
        "Returns the cos of the input number <br> Example: <br> ${$Cos(1)}"
    );
    LibapxVariableFunctionCreate("Cos", LibapxVariableFunctionCos);
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Tan(degrees)", 
        "Returns the tan of the input number <br> Example: <br> ${$Tan(1)}"
    );
    LibapxVariableFunctionCreate("Tan", LibapxVariableFunctionTan);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Floor(number)", 
        "Rounds value to smallest whole number<br> Example: <br> ${$Floor(1.2)} // 1"
    );
    LibapxVariableFunctionCreate("Floor", LibapxVariableFunctionFloor);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"Round(number)", 
        "Rounds value to nearest whole number<br> Example: <br> ${$Round(1.2)} // 1"
    );
    LibapxVariableFunctionCreate("Round", LibapxVariableFunctionRound);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitCount()", 
        "Returns the current context's unit count <br> Example: <br> ${UnitCount()}"
    );
    LibapxVariableFunctionCreate("UnitCount", LibapxVariableFunctionUnitCount);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxVariableFunctionPrefix+"UnitFacing()", 
        "Returns the current unit facing <br> Example: <br> ${UnitFacing()}"
    );
    LibapxVariableFunctionCreate("UnitFacing", LibapxVariableFunctionUnitFacing);


    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"String()", 
        "Returns string <br> Example: <br> $[&String()]"
    );
    LibapxStringFunctionCreate("String", LibapxVariableFunctionString);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Length()", 
        "Returns length of string <br> Example: <br> $[&Length(string)]"
    );
    LibapxStringFunctionCreate("Length", LibapxVariableFunctionLength);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Unit()", 
        "Returns type of unit <br> Example: <br> $[&Unit()]"
    );
    LibapxStringFunctionCreate("Unit", LibapxVariableFunctionUnit);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Name()", 
        "Returns name of unit <br> Example: <br> $[&Name()]"
    );
    LibapxStringFunctionCreate("Name", LibapxVariableFunctionName);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Desc()", 
        "Returns apex desc of unit <br> Example: <br> $[&Desc()]"
    );
    LibapxStringFunctionCreate("Desc", LibapxVariableFunctionDesc);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Subtitle()", 
        "Returns subtitle of unit <br> Example: <br> $[&Subtitle()]"
    );
    LibapxStringFunctionCreate("Subtitle", LibapxVariableFunctionSubtitle);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Reword()", 
        "Returns string <br> $[&Reword(#timesreplaced replacedword replaceword [words!])] <br> Example: <br> $[&Reword(-1 You Myself I Hate You!)] <br> Output: I Hate Myself!"
    );
    LibapxStringFunctionCreate("Reword", LibapxVariableFunctionReplaceWord);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Rel()", 
        "Returns unit's relative coordinates based on input. <br> Example: <br> $[&Rel(+0 +5)]"
    );
    LibapxStringFunctionCreate("Rel", LibapxVariableFunctionRelX);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Sub()", 
        "Returns substring within string given two numbers <br> Example: <br> $[&Sub(2 10 Apples Are Stupid)] <br> Output: pples Are"
    );
    LibapxStringFunctionCreate("Sub", LibapxVariableFunctionStringSub);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Repeat()", 
        "Repeat the string a number of times based on first input. <br> Example: <br> $[&Repeat(3 Hello World)] <br> Output: Hello WorldHello WorldHello World"
    );
    LibapxStringFunctionCreate("Repeat", LibapxVariableFunctionStringRepeat);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Word()", 
        "Returns a word from the string <br> based on first input. <br> Example: <br> $[&Word(2 Apples Are Delicious)] <br> Output: Are"
    );
    LibapxStringFunctionCreate("Word", LibapxVariableFunctionStringWord);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Upper()", 
        "Returns string in all UPPERCASE <br> Example: <br> $[&Upper(Pears are Pear Shaped)] <br> Output: PEARS ARE PEAR SHAPED"
    );
    LibapxStringFunctionCreate("Upper", LibapxVariableFunctionStringUpper);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"lower()", 
        "Returns string in all lowercased <br> Example: <br> $[&lower(Bananas are Banana Shaped)] <br> Output: bananas are banana shaped"
    );
    LibapxStringFunctionCreate("lower", LibapxVariableFunctionStringLower);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strcmp()", 
        "Compares two words. Not case-sensitive. <br> Returns 1 if both match, else 0. <br> Example: <br> $[&strcmp(hello hello)] <br> Output: 1"
    );
    LibapxStringFunctionCreate("strcmp", LibapxVariableFunctionStringCompareInsensitive);
    
    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strcmpi()", 
        "Compares two words. Case-Sensitive. <br> Returns 1 if both match, else 0.<br> Example: <br> $[&strcmpi(hello Hello)] <br> Output: 0"
    );
    LibapxStringFunctionCreate("strcmpi", LibapxVariableFunctionStringCompare);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"Actor()", 
        "Returns actor information <br> Can use ->Target <br> Example: <br> $[&Actor(->::Main model)]"
    );
    LibapxStringFunctionCreate("Actor", LibapxVariableFunctionStringGet);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strcnt()", 
        "Checks if string2 contains string1. Case-Sensitive. <br> Returns 1 if both match, else 0.<br> Example: <br> $[&strcnt(a Apple)] <br> Output: 0" 
    );
    LibapxStringFunctionCreate("strcnt", LibapxVariableFunctionStringContainsSensitive);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strcnti()", 
        "Checks if string2 contains string1. Not Case-Sensitive. <br> Returns 1 if both match, else 0.<br> Example: <br> $[&strcnti(a Apple)] <br> Output: 1" 
    );
    LibapxStringFunctionCreate("strcnti", LibapxVariableFunctionStringContainsInsensitive);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strfind()", 
        "Find string1's position in string2. Case-Sensitive. <br> Example: <br> $[&strfind(I Where am I?)] <br> Output: 10"
    );
    LibapxStringFunctionCreate("strfind", LibapxVariableFunctionStringFindSensitive);

    LibapxCommandsGuideSetVariableFunctionEntry(
        gv_LibapxStringFunctionPrefix+"strfindi()", 
        "Find string1's position in string2. Not case-sensitive. <br> Example: <br> $[&strfindi(pears ears Pearson Pears!)] <br> Output: 6"
    );
    LibapxStringFunctionCreate("strfindi", LibapxVariableFunctionStringFindInsensitive);


    
}
